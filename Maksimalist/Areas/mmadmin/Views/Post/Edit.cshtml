@model Maksimalist.Models.Post

@{
    ViewBag.Title = "Edit";


}
<html>
<head>
    <title>Edit</title>
    <script src="~/ckeditor/ckeditor.js"></script>
    <script src="~/bundles/jqueryval"></script>

    <script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
    <link href="~/Content/dropzone.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/bootstrap-tagsinput/bootstrap-tagsinput.css">
    <script src="~/Scripts/dropzone.js"></script>

</head>
<body>
    <h2>Edit</h2>


    @using (Html.BeginForm("Edit", "Post", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Post</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    <img height="100" width="100" src="@Model.ImageUrl"/>
                </div>
                <label class="control-label col-md-2" for="ImageUrl">İçerik Görseli</label>
                <div class="col-md-4">
                    <img height="100" width="100" src="@Model.ContentImage" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
            <script type="text/javascript">
                $(function () {
                    $("#CategoryId").change(function () {
                        var self = $(this);
                        var items = "";
                        $.getJSON("@Url.Action("GetSubCategories", "Post",new{area="mmadmin"})/" + self.val(),
                                                                            function (data) {
                                                                                $.each(data, function (index, item) {
                                                                                    items += "<option value='" + item.Value + "'>" + item.Text
                                                                                                                                        + "</option>";
                                                                                });
                                                                                $("#SubCategoryId").html(items);
                                                                            });
                    });
                });
            </script>

            <div class="form-group">
                @Html.LabelFor(model => model.SubCategoryId, "SubCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SubCategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HasGallery, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.HasGallery)
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.HasVideo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.HasVideo)
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    <input name="file1" type="file" /> <p class="help-block">460x552</p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContentImage, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    <input name="file2" type="file" id="ContentImage" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.VideoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VideoUrl, new { htmlAttributes = new { @class = "form-control text-box single-line" } })
                </div>
            </div>
            <script>
                $(document).ready(function () {
                    if ($("#HasGallery").is(":checked")== false) {
                        $("#GalleryId")
                            .attr("disabled","disabled")
                    }
                    if ($("#HasVideo").is(":checked") == false) {
                        $("#VideoUrl")
                            .attr("disabled", "disabled")
                    }
                });
            </script>
            <script>
                $("#HasVideo").click(function () {
                    if ($("#HasVideo").is(":checked")) {
                        $("#VideoUrl")
                            .removeAttr("disabled")
                       

                    }
                    else {
                        $("#VideoUrl")
                            .attr("disabled", "disabled")
                            .val(null)
                       
                    }
                });
            </script>
            <script>
                $("#HasGallery").click(function () {
                    if ($("#HasGallery").is(":checked")) {
                        $("#GalleryId")
                            .removeAttr("disabled")

                    }
                    else {
                        $("#GalleryId")
                            .attr("disabled", "disabled")
                            .val(null)

                    }
                });
            </script>
            <div class="form-group">
                @Html.LabelFor(model => model.GalleryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GalleryId, new { htmlAttributes = new { @class = "form-control text-box single-line" } })
                    @Html.ValidationMessageFor(model => model.GalleryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Headline, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Headline, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Headline, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bottomline, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bottomline, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bottomline, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <script>
                CKEDITOR.replace('Content', {
                    filebrowserImageBrowseUrl: '../Post/uploadPartial',
                    filebrowserImageUploadUrl: '../Post/uploadnow'
                });
                function updateValue(id, value) {
                    // this gets called from the popup window and updates the field with a new value
                    document.getElementById(id).value = value;
                }
            </script>





            <div class="form-group">
                @Html.LabelFor(model => model.PostDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control text-box single-line input-validation-error" id="PostDate" name="PostDate" type="datetime" value="@Model.PostDate.ToString("dd.MM.yyyy")">

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <select multiple data-role="tagsinput" name="Tags">
                        @foreach (var i in Model.Tags)
                        {
                            <option value="@i.Name">@i.Name</option>
                        }
                    </select>

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.HitCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                       @Html.EditorFor(model => model.HitCount, new { htmlAttributes = new { @class = "form-control text-box single-line" } })

                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Manset, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Manset)

                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edit" class="btn btn-default" />
                </div>
            </div>
        </div>

    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>




    <script src="~/bootstrap-tagsinput/bootstrap-tagsinput.min.js"></script>

    <script src="~/bootstrap-tagsinput/bootstrap-tagsinput-angular.js"></script>
</body>
</html>